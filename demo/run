#!/usr/bin/env bash
set -x
trap "set +x; read ; set -x;" debug

### Define ML Pipeline

: initialize the git repository
git init

: initialize the dvc project
dvc init

: install useful git hooks
dvc install

: check git
git status
git commit -m 'Intialize repository with dvc'

: fetch the dataset
mkdir data && pushd data || exit
kaggle competitions download -c digit-recognizer
popd || exit
du -sh data/*

: add external source to dvc
dvc add data/digit-recognizer.zip
git add data/.gitignore data/digit-recognizer.zip.dvc
git commit -m 'Add digit recognizer competition data'

: probing around a bit more
cat data/digit-recognizer.zip.dvc
tree .dvc/cache/ -sh

: unzip is the first pipeline step
dvc run -n unzip-digit-recognizer \
    -d data/digit-recognizer.zip \
    -o data/digit-recognizer \
    unzip data/digit-recognizer.zip -d data/digit-recognizer

du -sh data/digit-recognizer/*
cat .gitignore
cat dvc.yaml
cat dvc.lock

: commit
git add data/.gitignore dvc.yaml dvc.lock
git commit -m 'Add unzip step to pipeline'
dvc dag

: now we start coding
mkdir code

: split training and testing samples
cp ../.pre/split_train_test.py code/
dvc run -n split-train-test \
    -d code/split_train_test.py \
    -d data/digit-recognizer/train.csv \
    -o data/splits \
    python code/split_train_test.py ./data/digit-recognizer/train.csv ./data/splits

: model training
cp ../.pre/train_model.py code/
dvc run -n train-model \
    -d code/train_model.py \
    -d data/splits \
    -o data/model.dump \
    python code/train_model.py ./data/splits ./data/model.dump

: model evaluation
cp ../.pre/evaluate.py code/
dvc run -n evaluate \
    -d code/evaluate.py \
    -d data/splits \
    -d data/model.dump \
    -M data/score.txt \
    python code/evaluate.py data/splits data/model.dump data/score.txt

: commit
git add -A
git commit -m 'Add model training and evaluation'
dvc dag

: congratulations
cat data/score.txt
dvc metrics show

# do something to change the pipeline

: everything is cached
dvc repro

# extra topics

: repositories become data registries
dvc list https://github.com/iterative/dataset-registry get-started

: talk about experiments, plots, reflinks/hardlinks/softlinks/copy