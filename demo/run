#!/usr/bin/env bash
set -x
trap "set +x; read ; set -x;" debug

### Define ML Pipeline

: initialize the git repository
git init

: initialize the dvc project
dvc init

: install useful git hooks
dvc install

: check git
git status
git commit -m 'Intialize repository with dvc'

: fetch the dataset
mkdir data && pushd data || exit
kaggle competitions download -c digit-recognizer
popd || exit
du -sh data/*

: add external source to dvc
dvc add data/digit-recognizer.zip
git add data/.gitignore data/digit-recognizer.zip.dvc
git commit -m 'Add digit recognizer competition data'

: probing around a bit more
cat data/digit-recognizer.zip.dvc
tree .dvc/cache/ -sh

: unzip is the first pipeline step
dvc run -n dataset\
    -d data/digit-recognizer.zip \
    -o data/dataset \
    unzip data/digit-recognizer.zip -d dataset

: use a smaller dataset to go faster
dvc run -n \
    -d data/Posts.xml \
    -o data/PostsSubset.xml \
    -f data/PostsSubset.xml.dvc \
    "head -n 10000 data/Posts.xml > data/PostsSubset.xml"

du -sh data/*
head -n 1 data/Posts.xml
cat data/Posts.xml.dvc data/PostsSubset.xml.dvc

: commit
git add .
git commit -m 'Add unzip step to pipeline'

: now we start coding
mkdir code
cp ../.pre/conf.py code/

: convert xml to tsv
cp ../.pre/xml_to_tsv.py code/
dvc run \
    -d code/conf.py \
    -d code/xml_to_tsv.py \
    -d data/PostsSubset.xml \
    -o data/Posts.tsv \
    -f data/Posts.tsv.dvc \
    python code/xml_to_tsv.py
head -n 1 data/Posts.tsv

: split training and testing samples
cp ../.pre/split_train_test.py code/
dvc run \
    -d code/conf.py \
    -d code/split_train_test.py \
    -d data/Posts.tsv \
    -o data/Posts-test.tsv \
    -o data/Posts-train.tsv \
    -f data/Posts-split.dvc \
    python code/split_train_test.py 0.33 42

: commit
git add .
git commit -m 'Add train test split to pipeline'

: featurization script
cp ../.pre/featurization.py code/
dvc run \
    -d code/conf.py \
    -d code/featurization.py \
    -d data/Posts-train.tsv \
    -d data/Posts-test.tsv \
    -o data/matrix-train.p \
    -o data/matrix-test.p \
    -f data/matrix-split.dvc \
    python code/featurization.py

: model training
cp ../.pre/train_model.py code/
 dvc run \
    -d code/conf.py \
    -d code/train_model.py \
    -d data/matrix-train.p \
    -o data/model.p \
    -f data/model.dvc \
    python code/train_model.py 42

: model evaluation
cp ../.pre/evaluate.py code/
 dvc run \
    -d code/conf.py \
    -d code/evaluate.py \
    -d data/model.p \
    -d data/matrix-test.p \
    -M data/eval.txt \
    -f Dvcfile \
    python code/evaluate.py

: commit
git add .
git commit -m 'Add model training and evaluation'

: congratulations
cat data/eval.txt
dvc metrics show

### Reproducibility

: everything is cached
dvc repro
