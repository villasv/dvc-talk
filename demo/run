#!/usr/bin/env bash
set -x
trap "set +x; read ; set -x;" debug

### Define ML Pipeline

: initialize the git repository
git init

: initialize the dvc project
dvc init

: lets probe around a bit
ls -a .dvc
cat .dvc/.gitignore
git status -s

: commit
git add -A
git commit -m 'Intialize repository with dvc'

: fetch the dataset
mkdir data
wget -P data https://dvc.org/s3/so/100K/Posts.xml.zip || cp ../.pre/Posts.xml.zip data/Posts.xml.zip
du -sh data/*

: add externals ource to dvc
dvc add data/Posts.xml.zip
git add .
git commit -m 'Add posts xml dataset to dvc inputs'

: probing around a bit more
cat data/.gitignore
cat data/Posts.xml.zip.dvc
du -sh .dvc/cache/ec/*

: git-lfs uses copies, we and git-annex are smarter
ls -i data/Posts.xml.zip
ls -i .dvc/cache/ec/
du -sh .

: unzip is the first pipeline step
dvc run \
    -d data/Posts.xml.zip \
    -o data/Posts.xml \
    -f data/Posts.xml.dvc \
    unzip Posts.xml.zip
du -sh data/*
cat data/Posts.xml.dvc
cat data/.gitignore

: commit
git add .
git commit -m 'Add unzip step to pipeline'

: convert xml to tsv
cp ../.pre/conf.py code/
cp ../.pre/xml_to_tsv.py code/
dvc run \
    -d code/conf.py \
    -d code/xml_to_csv.py \
    -d data/Posts.xml \
    -o data/Posts.tsv \
    -f data/Posts.tsv.dvc \
    python code/xml_to_csv.py

: split training and testing samples
cp ../.pre/split_train_test.py code/
dvc run \
    -d code/conf.py \
    -d code/split_train_test.py \
    -d data/Posts.tsv \
    -o data/Posts-test.tsv \
    -o data/Posts-train.tsv \
    -f data/Posts-split.dvc \
    python code/split_train_test.py 0.33 42

: commit
git add .
git commit -m 'Add train test split to pipeline'

: featurization script
dvc run \
    -d code/conf.py \
    -d code/featurization.py \
    -d data/Posts-train.tsv \
    -d data/Posts-test.tsv \
    -o data/matrix-train.p \
    -o data/matrix-test.p \
    -f data/matrix-split.dvc \
    python code/featurization.py

: model training
 dvc run \
    -d data/matrix-train.p \
    -d code/train_model.py \
    -d code/conf.py \
    -o data/model.p \
    -f data/model.dvc \
    python code/train_model.py 42

: model evaluation
 dvc run \
    -d data/model.p \
    -d data/matrix-test.p \
    -d code/evaluate.py \
    -d code/conf.py \
    -M data/eval.txt \
    -f Dvcfile \
    python code/evaluate.py

: commit
git status -s
git add .
git commit

: congratulations
cat data/eval.txt
dvc metrics show

### Reproducibility

: everything is cached
dvc repro
